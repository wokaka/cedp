#if defined(__cplusplus)
#if !defined(__CUDACC__) &&! defined(__CUDABE__) && !defined(__MULTI_CORE__)
namespace __cuda_emu {
#endif
extern "C" {
#endif
#if defined(__CUDACC__) || defined(__CUDABE__) || defined(__MULTI_CORE__) || defined(__cplusplus)
# 214 "/usr/lib/gcc/i486-linux-gnu/4.3.2/include/stddef.h" 3
typedef unsigned size_t;
#endif
#include "crt/device_runtime.h"
#if defined(__CUDACC__) || defined(__CUDABE__) || defined(__MULTI_CORE__) || defined(__cplusplus)
# 145 "/usr/include/bits/types.h" 3
typedef long __clock_t;
# 61 "/usr/include/time.h" 3
typedef __clock_t clock_t;
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 184 "/usr/include/time.h" 3
/*DEVICE_BUILTIN*/extern clock_t clock(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 38 "/usr/include/string.h" 3
/*DEVICE_BUILTIN*/extern void *memcpy(void *__restrict__, const void *__restrict__, size_t);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 59 "/usr/include/string.h" 3
/*DEVICE_BUILTIN*/extern void *memset(void *, int, size_t);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 65 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int abs(int) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long labs(long) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 69 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llabs(long long) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 71 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fabs(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 73 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fabsf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 76 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int min(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 78 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned umin(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 80 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llmin(long long, long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 82 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned long long ullmin(unsigned long long, unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 84 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fminf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 86 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fmin(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 89 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int max(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 91 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned umax(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 93 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llmax(long long, long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 95 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned long long ullmax(unsigned long long, unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 97 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fmaxf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 99 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fmax(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 102 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double sin(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 104 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float sinf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 107 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double cos(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 109 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float cosf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 112 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern void sincos(double, double *, double *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 114 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern void sincosf(float, float *, float *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 117 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double tan(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 119 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float tanf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 122 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double sqrt(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 124 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float sqrtf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 127 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double rsqrt(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 129 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float rsqrtf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 132 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double exp2(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 134 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float exp2f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 137 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double exp10(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 139 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float exp10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 142 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double expm1(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 144 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float expm1f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 147 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log2(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 149 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float log2f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 152 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log10(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 154 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float log10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 157 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 159 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float logf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 162 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log1p(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 164 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float log1pf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 167 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double floor(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 169 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float floorf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 172 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double exp(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 174 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float expf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 177 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double cosh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 179 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float coshf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 182 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double sinh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 184 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float sinhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 187 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double tanh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 189 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float tanhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 192 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double acosh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 194 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float acoshf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 197 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double asinh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 199 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float asinhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 202 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double atanh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 204 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float atanhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 207 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double ldexp(double, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 209 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float ldexpf(float, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 212 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double logb(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 214 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float logbf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 217 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int ilogb(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 219 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int ilogbf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 222 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double scalbn(double, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 224 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float scalbnf(float, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 227 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double scalbln(double, long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 229 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float scalblnf(float, long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 232 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double frexp(double, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 234 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float frexpf(float, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 237 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double round(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 239 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float roundf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 242 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lround(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 244 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lroundf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 247 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llround(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 249 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llroundf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 252 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double rint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 254 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float rintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 257 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lrint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 259 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lrintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 262 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llrint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 264 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llrintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 267 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double nearbyint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 269 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float nearbyintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 272 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double ceil(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 274 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float ceilf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 277 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double trunc(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 279 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float truncf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 282 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fdim(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 284 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fdimf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 287 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double atan2(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 289 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float atan2f(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 292 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double atan(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 294 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float atanf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 297 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double asin(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 299 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float asinf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 302 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double acos(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 304 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float acosf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 307 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double hypot(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 309 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float hypotf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 312 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double cbrt(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 314 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float cbrtf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 317 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double pow(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 319 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float powf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 322 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double modf(double, double *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 324 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float modff(float, float *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 327 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fmod(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 329 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fmodf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 332 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double remainder(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 334 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float remainderf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 337 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double remquo(double, double, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 339 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float remquof(float, float, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 342 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erf(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 344 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erff(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 347 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erfinv(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 349 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erfinvf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 352 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erfc(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 354 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erfcf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 357 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erfcinv(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 359 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erfcinvf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 362 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double lgamma(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 364 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float lgammaf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 367 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double tgamma(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 369 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float tgammaf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 372 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double copysign(double, double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 374 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float copysignf(float, float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 377 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double nextafter(double, double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 379 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float nextafterf(float, float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 382 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double nan(const char *) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 384 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float nanf(const char *) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 387 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isinf(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 389 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isinff(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 392 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isnan(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 394 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isnanf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 408 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __finite(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 410 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __finitef(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 420 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fma(double, double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 422 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fmaf(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 64 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __cosf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 66 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __sinf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 68 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __tanf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 82 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __sincosf(float, float *, float *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 101 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __expf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 110 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __logf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 113 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __log10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 121 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __exp10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 145 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __log2f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 154 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __powf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 193 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/extern int __isinfl(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 196 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/extern int __finitel(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 231 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/extern int __isnanl(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 36 "/usr/include/bits/mathinline.h" 3
/*DEVICE_BUILTIN*/extern __inline__ int __signbitf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 42 "/usr/include/bits/mathinline.h" 3
/*DEVICE_BUILTIN*/extern __inline__ int __signbit(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 48 "/usr/include/bits/mathinline.h" 3
/*DEVICE_BUILTIN*/extern __inline__ int __signbitl(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 60 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __mulhi(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 62 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __umulhi(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 65 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __mul64hi(long long, long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __umul64hi(unsigned long long, unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 70 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int_as_float(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 72 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float_as_int(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 76 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __syncthreads(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 78 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __prof_trigger(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 80 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __threadfence(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 82 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __threadfence_block(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 84 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __trap(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 86 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __brkpt(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 89 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __saturatef(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 92 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __sad(int, int, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 94 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __usad(unsigned, unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 97 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __mul24(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 99 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __umul24(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 102 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float fdividef(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 104 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdividef(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 107 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) double fdivide(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 140 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 142 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 144 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 146 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 149 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 151 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 153 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 155 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 158 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_rn(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 160 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_rz(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 162 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_ru(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 164 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_rd(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 167 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_rn(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 169 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_rz(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 171 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_ru(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 173 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_rd(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 176 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 178 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 180 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 182 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 185 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 187 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 189 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 191 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 194 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __ll2float_rn(long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 197 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __ull2float_rn(unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 200 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned short __float2half_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 202 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __half2float(unsigned short);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 205 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_rn(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 207 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_rz(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 209 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_ru(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 211 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_rd(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 214 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_rn(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 216 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_rz(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 218 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_ru(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 220 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_rd(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 223 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_rn(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 225 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_rz(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 227 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_ru(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 229 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_rd(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 232 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 234 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 236 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 238 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 241 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 243 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 245 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 247 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 250 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_rn(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 252 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_rz(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 254 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_ru(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 256 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_rd(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 259 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __clz(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 261 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __ffs(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 263 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __popc(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 265 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __brev(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 268 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __clzll(long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 270 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __ffsll(long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 272 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __popcll(unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 274 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __brevll(unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 60 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) uint4 __utexfetchi(__texture_type__, int4);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 62 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int4 __itexfetchi(__texture_type__, int4);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 64 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float4 __ftexfetchi(__texture_type__, int4);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) uint4 __utexfetch(__texture_type__, float4, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 69 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int4 __itexfetch(__texture_type__, float4, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 71 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float4 __ftexfetch(__texture_type__, float4, int);
#endif
#endif
#if !defined(__multi_core__)
# 150 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) float _Z9product1Dfffff(float, float, float, float, float);
#endif
#if !defined(__multi_core__)
# 157 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) float _Z5dist26float3S_(float3, float3);
#endif
#if !defined(__multi_core__)
# 166 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) float _Z5dist26float4S_(float4, float4);
#endif
#if !defined(__multi_core__)
# 175 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) float3 _Z10ReducePair6float4S_6float2S0_f(float4, float4, float2, float2, float);
#endif
#if !defined(__multi_core__)
# 187 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) float _Z4Rootf(float);
#endif
#if !defined(__multi_core__)
# 261 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) void _Z8GetBasesiiiRiS_S_S_S_(int, int, int, int *, int *, int *, int *, int *);
#endif
#if !defined(__multi_core__)
# 272 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) void _Z5GetNsiiiiiRiS_S_S_(int, int, int, int, int, int *, int *, int *, int *);
#endif
#if !defined(__multi_core__)
# 292 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) void _Z8GetAtomsiRiS_S_S_(int, int *, int *, int *, int *);
#endif
#if !defined(__multi_core__)
# 301 "src/cuda/crys_kernel.cu"
___device__(extern  __no_sc__) void _Z10GetOffsetsiRiS_S_S_(int, int *, int *, int *, int *);
#endif
#if !defined(__multi_core__)
# 37 "src/cuda/crys_kernel.cu"
__global__ __var_used__ extern void _Z8ComputeXP5uint4Pfi(__in_type__(uint4 *const,uint4 *), __in_type__(float *const,float *), __in_type__(const int,int));
#endif
#if !defined(__multi_core__)
# 118 "src/cuda/crys_kernel.cu"
__global__ __var_used__ extern void _Z11DoReductionPfS_P5uint2ii(__in_type__(float *const,float *), __in_type__(float *const,float *), __in_type__(uint2 *const,uint2 *), __in_type__(const int,int), __in_type__(const int,int));
#endif
# 32 "src/cuda/crys_kernel.cu"
__loc_sc__(__text__,,) __texture_type__ __texture_var(texCoors);
# 33 "src/cuda/crys_kernel.cu"
__loc_sc__(__text__,,) __texture_type__ __texture_var(texSprms);
# 34 "src/cuda/crys_kernel.cu"
__loc_sc__(__text__,,) __texture_type__ __texture_var(texWghts);
#include "common_functions.h"
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__multi_core__)
# 150 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) float _Z9product1Dfffff(
# 150 "src/cuda/crys_kernel.cu"
float alpha_a, 
# 150 "src/cuda/crys_kernel.cu"
float coor_a, 
# 150 "src/cuda/crys_kernel.cu"
float alpha_b, 
# 151 "src/cuda/crys_kernel.cu"
float coor_b, 
# 151 "src/cuda/crys_kernel.cu"
float sum_ab)
# 152 "src/cuda/crys_kernel.cu"
{
# 153 "src/cuda/crys_kernel.cu"
return __fdividef(((alpha_a * coor_a) + (alpha_b * coor_b)), sum_ab);
# 154 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 157 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) float _Z5dist26float3S_(
# 157 "src/cuda/crys_kernel.cu"
float3 Atom1, 
# 157 "src/cuda/crys_kernel.cu"
float3 Atom2)
# 158 "src/cuda/crys_kernel.cu"
{
# 159 "src/cuda/crys_kernel.cu"
auto float dx;
# 160 "src/cuda/crys_kernel.cu"
auto float dy;
# 161 "src/cuda/crys_kernel.cu"
auto float dz;
# 159 "src/cuda/crys_kernel.cu"
dx = (((Atom1.x)) - ((Atom2.x)));
# 160 "src/cuda/crys_kernel.cu"
dy = (((Atom1.y)) - ((Atom2.y)));
# 161 "src/cuda/crys_kernel.cu"
dz = (((Atom1.z)) - ((Atom2.z)));
# 162 "src/cuda/crys_kernel.cu"
return ((dx * dx) + (dy * dy)) + (dz * dz);
# 163 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 166 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) float _Z5dist26float4S_(
# 166 "src/cuda/crys_kernel.cu"
float4 Atom1, 
# 166 "src/cuda/crys_kernel.cu"
float4 Atom2)
# 167 "src/cuda/crys_kernel.cu"
{
# 168 "src/cuda/crys_kernel.cu"
auto float dx;
# 169 "src/cuda/crys_kernel.cu"
auto float dy;
# 170 "src/cuda/crys_kernel.cu"
auto float dz;
# 168 "src/cuda/crys_kernel.cu"
dx = (((Atom1.x)) - ((Atom2.x)));
# 169 "src/cuda/crys_kernel.cu"
dy = (((Atom1.y)) - ((Atom2.y)));
# 170 "src/cuda/crys_kernel.cu"
dz = (((Atom1.z)) - ((Atom2.z)));
# 171 "src/cuda/crys_kernel.cu"
return ((dx * dx) + (dy * dy)) + (dz * dz);
# 172 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 175 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) float3 _Z10ReducePair6float4S_6float2S0_f(
# 175 "src/cuda/crys_kernel.cu"
float4 Atom1, 
# 175 "src/cuda/crys_kernel.cu"
float4 Atom2, 
# 175 "src/cuda/crys_kernel.cu"
float2 Param1, 
# 176 "src/cuda/crys_kernel.cu"
float2 Param2, 
# 176 "src/cuda/crys_kernel.cu"
float sum_12)
# 177 "src/cuda/crys_kernel.cu"
{
# 178 "src/cuda/crys_kernel.cu"
auto float3 Atomp;
# 179 "src/cuda/crys_kernel.cu"
(Atomp.x) = (_Z9product1Dfffff(((Param1.x)), ((Atom1.x)), ((Param2.x)), ((Atom2.x)), sum_12));
# 180 "src/cuda/crys_kernel.cu"
(Atomp.y) = (_Z9product1Dfffff(((Param1.x)), ((Atom1.y)), ((Param2.x)), ((Atom2.y)), sum_12));
# 181 "src/cuda/crys_kernel.cu"
(Atomp.z) = (_Z9product1Dfffff(((Param1.x)), ((Atom1.z)), ((Param2.x)), ((Atom2.z)), sum_12));
# 183 "src/cuda/crys_kernel.cu"
return Atomp;
# 184 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 187 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) float _Z4Rootf(
# 187 "src/cuda/crys_kernel.cu"
float X)
# 188 "src/cuda/crys_kernel.cu"
{
# 189 "src/cuda/crys_kernel.cu"
auto float rPIE4;
# 190 "src/cuda/crys_kernel.cu"
auto float WW1;
# 191 "src/cuda/crys_kernel.cu"
auto float F1;
# 191 "src/cuda/crys_kernel.cu"
auto float E;
# 191 "src/cuda/crys_kernel.cu"
auto float Y;
# 191 "src/cuda/crys_kernel.cu"
auto float inv;
# 190 "src/cuda/crys_kernel.cu"
WW1 = (0.0F);
# 193 "src/cuda/crys_kernel.cu"
rPIE4 = (1.273239493F);
# 194 "src/cuda/crys_kernel.cu"
if (X < (3.000000106e-07F))
# 195 "src/cuda/crys_kernel.cu"
{
# 196 "src/cuda/crys_kernel.cu"
WW1 = ((1.0F) - ((0.3333333433F) * X));
# 197 "src/cuda/crys_kernel.cu"
}
# 197 "src/cuda/crys_kernel.cu"
else 
# 197 "src/cuda/crys_kernel.cu"
{
# 198 "src/cuda/crys_kernel.cu"
if (X < (1.0F))
# 199 "src/cuda/crys_kernel.cu"
{
# 200 "src/cuda/crys_kernel.cu"
F1 = (((((((((((((((((((-8.363139159e-08F) * X) + (1.212226039e-06F)) * X) - (1.156626058e-05F)) * X) + (9.251973825e-05F)) * X) - (0.0006409941125F)) * X) + (0.003787870519F)) * X) - (0.01851851679F)) * X) + (0.07142857462F)) * X) - (0.200000003F)) * X) + (0.3333333433F));
# 205 "src/cuda/crys_kernel.cu"
WW1 = (((X + X) * F1) + (__expf((-X))));
# 206 "src/cuda/crys_kernel.cu"
}
# 206 "src/cuda/crys_kernel.cu"
else 
# 206 "src/cuda/crys_kernel.cu"
{
# 207 "src/cuda/crys_kernel.cu"
if (X < (3.0F))
# 208 "src/cuda/crys_kernel.cu"
{
# 209 "src/cuda/crys_kernel.cu"
Y = (X - (2.0F));
# 210 "src/cuda/crys_kernel.cu"
F1 = (((((((((((((((((((((((-1.617027762e-10F) * Y) + (1.962152441e-09F)) * Y) - (2.142344613e-08F)) * Y) + (2.172165523e-07F)) * Y) - (1.988501708e-06F)) * Y) + (1.624293145e-05F)) * Y) - (0.0001167402952F)) * Y) + (0.0007248887559F)) * Y) - (0.003794900142F)) * Y) + (0.01617234945F)) * Y) - (0.05294281617F)) * Y) + (0.1157021821F));
# 216 "src/cuda/crys_kernel.cu"
WW1 = (((X + X) * F1) + (__expf((-X))));
# 217 "src/cuda/crys_kernel.cu"
}
# 217 "src/cuda/crys_kernel.cu"
else 
# 217 "src/cuda/crys_kernel.cu"
{
# 218 "src/cuda/crys_kernel.cu"
if (X < (5.0F))
# 219 "src/cuda/crys_kernel.cu"
{
# 220 "src/cuda/crys_kernel.cu"
Y = (X - (4.0F));
# 221 "src/cuda/crys_kernel.cu"
F1 = (((((((((((((((((((((((-2.624535658e-11F) * Y) + (3.24031052e-10F)) * Y) - (3.61496566e-09F)) * Y) + (3.760256817e-08F)) * Y) - (3.553558372e-07F)) * Y) + (3.022556484e-06F)) * Y) - (2.290098928e-05F)) * Y) + (0.0001526537526F)) * Y) - (0.0008819474024F)) * Y) + (0.004332079552F)) * Y) - (0.01752578281F)) * Y) + (0.05284063146F));
# 227 "src/cuda/crys_kernel.cu"
WW1 = (((X + X) * F1) + (__expf((-X))));
# 228 "src/cuda/crys_kernel.cu"
}
# 228 "src/cuda/crys_kernel.cu"
else 
# 228 "src/cuda/crys_kernel.cu"
{
# 229 "src/cuda/crys_kernel.cu"
if (X < (10.0F))
# 230 "src/cuda/crys_kernel.cu"
{
# 231 "src/cuda/crys_kernel.cu"
E = (__expf((-X)));
# 232 "src/cuda/crys_kernel.cu"
inv = ((1.0F) / X);
# 233 "src/cuda/crys_kernel.cu"
WW1 = (((((((((((((((0.4689751267F) * inv) - (0.6995560527F)) * inv) + (0.5368928313F)) * inv) - (0.3288303018F)) * inv) + (0.2464559674F)) * inv) - (0.4998407364F)) * inv) - (3.150107887e-06F)) * E) + ((1.0F) / (__cuda_sqrtf((rPIE4 * X)))));
# 237 "src/cuda/crys_kernel.cu"
}
# 237 "src/cuda/crys_kernel.cu"
else 
# 237 "src/cuda/crys_kernel.cu"
{
# 238 "src/cuda/crys_kernel.cu"
if (X < (15.0F))
# 239 "src/cuda/crys_kernel.cu"
{
# 240 "src/cuda/crys_kernel.cu"
E = (__expf((-X)));
# 241 "src/cuda/crys_kernel.cu"
inv = ((1.0F) / X);
# 242 "src/cuda/crys_kernel.cu"
WW1 = (((((((((-0.1878468692F) * inv) + (0.2299184948F)) * inv) - (0.4989375174F)) * inv) - (2.19165122e-05F)) * E) + ((1.0F) / (__cuda_sqrtf((rPIE4 * X)))));
# 245 "src/cuda/crys_kernel.cu"
}
# 245 "src/cuda/crys_kernel.cu"
else 
# 245 "src/cuda/crys_kernel.cu"
{
# 246 "src/cuda/crys_kernel.cu"
if (X < (33.0F))
# 247 "src/cuda/crys_kernel.cu"
{
# 248 "src/cuda/crys_kernel.cu"
E = (__expf((-X)));
# 249 "src/cuda/crys_kernel.cu"
inv = ((1.0F) / X);
# 250 "src/cuda/crys_kernel.cu"
WW1 = (((((((0.1962326467F) * inv) - (0.4969524145F)) * inv) - (6.015658073e-05F)) * E) + ((1.0F) / (__cuda_sqrtf((rPIE4 * X)))));
# 252 "src/cuda/crys_kernel.cu"
}
# 254 "src/cuda/crys_kernel.cu"
else 
# 254 "src/cuda/crys_kernel.cu"
{
# 255 "src/cuda/crys_kernel.cu"
WW1 = ((1.0F) / (__cuda_sqrtf((rPIE4 * X))));
# 256 "src/cuda/crys_kernel.cu"
}
# 256 "src/cuda/crys_kernel.cu"
}
# 256 "src/cuda/crys_kernel.cu"
}
# 256 "src/cuda/crys_kernel.cu"
}
# 256 "src/cuda/crys_kernel.cu"
}
# 256 "src/cuda/crys_kernel.cu"
}
# 256 "src/cuda/crys_kernel.cu"
}
# 257 "src/cuda/crys_kernel.cu"
return WW1;
# 258 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 261 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) void _Z8GetBasesiiiRiS_S_S_S_(
# 261 "src/cuda/crys_kernel.cu"
int Work, 
# 261 "src/cuda/crys_kernel.cu"
int thid, 
# 261 "src/cuda/crys_kernel.cu"
int Shift, 
# 261 "src/cuda/crys_kernel.cu"
int *localthid, 
# 262 "src/cuda/crys_kernel.cu"
int *a1, 
# 262 "src/cuda/crys_kernel.cu"
int *a2, 
# 262 "src/cuda/crys_kernel.cu"
int *a3, 
# 262 "src/cuda/crys_kernel.cu"
int *a4)
# 263 "src/cuda/crys_kernel.cu"
{
# 264 "src/cuda/crys_kernel.cu"
(*a1) = ((int)((((unsigned)Work) & 61440U) >> 12));
# 265 "src/cuda/crys_kernel.cu"
(*a2) = ((int)((((unsigned)Work) & 3840U) >> 8));
# 266 "src/cuda/crys_kernel.cu"
(*a3) = ((int)((((unsigned)Work) & 240U) >> 4));
# 267 "src/cuda/crys_kernel.cu"
(*a4) = ((int)(((unsigned)Work) & 15U));
# 268 "src/cuda/crys_kernel.cu"
(*localthid) = (thid - (Shift << 6)); 
# 269 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 272 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) void _Z5GetNsiiiiiRiS_S_S_(
# 272 "src/cuda/crys_kernel.cu"
int localthid, 
# 272 "src/cuda/crys_kernel.cu"
int a1, 
# 272 "src/cuda/crys_kernel.cu"
int a2, 
# 272 "src/cuda/crys_kernel.cu"
int a3, 
# 272 "src/cuda/crys_kernel.cu"
int a4, 
# 273 "src/cuda/crys_kernel.cu"
int *n1, 
# 273 "src/cuda/crys_kernel.cu"
int *n2, 
# 273 "src/cuda/crys_kernel.cu"
int *n3, 
# 273 "src/cuda/crys_kernel.cu"
int *n4)
# 274 "src/cuda/crys_kernel.cu"
{
# 275 "src/cuda/crys_kernel.cu"
auto int prod;
# 276 "src/cuda/crys_kernel.cu"
auto int res;
# 275 "src/cuda/crys_kernel.cu"
prod = (__mul24(a2, (__mul24(a3, a4))));
# 276 "src/cuda/crys_kernel.cu"
res = localthid;
# 277 "src/cuda/crys_kernel.cu"
(*n1) = (__float2int_rz(((float)(__fdividef(((float)res), ((float)prod))))));
# 278 "src/cuda/crys_kernel.cu"
res -= (__mul24(((*n1)), prod));
# 280 "src/cuda/crys_kernel.cu"
prod = (__mul24(a3, a4));
# 281 "src/cuda/crys_kernel.cu"
(*n2) = (__float2int_rz(((float)(__fdividef(((float)res), ((float)prod))))));
# 282 "src/cuda/crys_kernel.cu"
res -= (__mul24(((*n2)), prod));
# 284 "src/cuda/crys_kernel.cu"
prod = a4;
# 285 "src/cuda/crys_kernel.cu"
(*n3) = (__float2int_rz(((float)(__fdividef(((float)res), ((float)prod))))));
# 286 "src/cuda/crys_kernel.cu"
res -= (__mul24(((*n3)), prod));
# 288 "src/cuda/crys_kernel.cu"
(*n4) = res; 
# 289 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 292 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) void _Z8GetAtomsiRiS_S_S_(
# 292 "src/cuda/crys_kernel.cu"
int Work, 
# 292 "src/cuda/crys_kernel.cu"
int *atom1, 
# 292 "src/cuda/crys_kernel.cu"
int *atom2, 
# 292 "src/cuda/crys_kernel.cu"
int *atom3, 
# 292 "src/cuda/crys_kernel.cu"
int *atom4)
# 293 "src/cuda/crys_kernel.cu"
{
# 294 "src/cuda/crys_kernel.cu"
(*atom1) = ((int)((((unsigned)Work) & 4278190080U) >> 24));
# 295 "src/cuda/crys_kernel.cu"
(*atom2) = ((int)((((unsigned)Work) & 16711680U) >> 16));
# 296 "src/cuda/crys_kernel.cu"
(*atom3) = ((int)((((unsigned)Work) & 65280U) >> 8));
# 297 "src/cuda/crys_kernel.cu"
(*atom4) = ((int)(((unsigned)Work) & 255U)); 
# 298 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 301 "src/cuda/crys_kernel.cu"
___device__( __no_sc__) void _Z10GetOffsetsiRiS_S_S_(
# 301 "src/cuda/crys_kernel.cu"
int Work, 
# 301 "src/cuda/crys_kernel.cu"
int *off1, 
# 301 "src/cuda/crys_kernel.cu"
int *off2, 
# 301 "src/cuda/crys_kernel.cu"
int *off3, 
# 301 "src/cuda/crys_kernel.cu"
int *off4)
# 302 "src/cuda/crys_kernel.cu"
{
# 303 "src/cuda/crys_kernel.cu"
(*off1) = ((int)((((unsigned)Work) & 4278190080U) >> 24));
# 304 "src/cuda/crys_kernel.cu"
(*off2) = ((int)((((unsigned)Work) & 16711680U) >> 16));
# 305 "src/cuda/crys_kernel.cu"
(*off3) = ((int)((((unsigned)Work) & 65280U) >> 8));
# 306 "src/cuda/crys_kernel.cu"
(*off4) = ((int)(((unsigned)Work) & 255U)); 
# 307 "src/cuda/crys_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 37 "src/cuda/crys_kernel.cu"
__global__ __var_used__ void _Z8ComputeXP5uint4Pfi(
# 37 "src/cuda/crys_kernel.cu"
__in__(uint4 *const d_Work,uint4 *d_Work), 
# 37 "src/cuda/crys_kernel.cu"
__in__(float *const d_Output,float *d_Output), 
# 37 "src/cuda/crys_kernel.cu"
__in__(const int Offset,int Offset)){
# 37 "src/cuda/crys_kernel.cu"
{
# 38 "src/cuda/crys_kernel.cu"
{
# 39 "src/cuda/crys_kernel.cu"
__loc_sc__(__shared__,,auto ) float Data[64];
# 40 "src/cuda/crys_kernel.cu"
__loc_sc__(__shared__,,auto ) uint4 s_Work;
# 42 "src/cuda/crys_kernel.cu"
auto int blid;
# 43 "src/cuda/crys_kernel.cu"
auto int thid;
# 45 "src/cuda/crys_kernel.cu"
auto int myWorkIndex;
# 49 "src/cuda/crys_kernel.cu"
auto uint4 myWork;
# 51 "src/cuda/crys_kernel.cu"
auto int localthid;
# 51 "src/cuda/crys_kernel.cu"
auto int a1;
# 51 "src/cuda/crys_kernel.cu"
auto int a2;
# 51 "src/cuda/crys_kernel.cu"
auto int a3;
# 51 "src/cuda/crys_kernel.cu"
auto int a4;
# 55 "src/cuda/crys_kernel.cu"
auto float Result;
# 56 "src/cuda/crys_kernel.cu"
auto int Maxthid;
# 42 "src/cuda/crys_kernel.cu"
blid = ((int)((__cudaGet_blockIdx().x)));
# 43 "src/cuda/crys_kernel.cu"
thid = ((int)((__cudaGet_threadIdx().x)));
# 45 "src/cuda/crys_kernel.cu"
myWorkIndex = (((Offset + blid) << 6) + thid);
# 46 "src/cuda/crys_kernel.cu"
if (!(thid))
# 46 "src/cuda/crys_kernel.cu"
{
# 47 "src/cuda/crys_kernel.cu"
s_Work = (d_Work[(Offset + blid)]);
# 47 "src/cuda/crys_kernel.cu"
}
# 48 "src/cuda/crys_kernel.cu"
__syncthreads();
# 49 "src/cuda/crys_kernel.cu"
myWork = s_Work;
# 52 "src/cuda/crys_kernel.cu"
_Z8GetBasesiiiRiS_S_S_S_(((int)((myWork.x))), myWorkIndex, ((int)((myWork.w))), (&localthid), (&a1), (&a2), (&a3), (&a4));
# 55 "src/cuda/crys_kernel.cu"
Result = (0.0F);
# 56 "src/cuda/crys_kernel.cu"
Maxthid = (__mul24(a1, (__mul24(a2, (__mul24(a3, a4))))));
# 57 "src/cuda/crys_kernel.cu"
if (localthid < Maxthid)
# 58 "src/cuda/crys_kernel.cu"
{
# 58 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T211;
# 59 "src/cuda/crys_kernel.cu"
auto float __T212;
# 60 "src/cuda/crys_kernel.cu"
auto float4 __T213;
# 61 "src/cuda/crys_kernel.cu"
auto float __T214;
# 62 "src/cuda/crys_kernel.cu"
auto float __T215;
# 63 "src/cuda/crys_kernel.cu"
auto float __T216;
# 64 "src/cuda/crys_kernel.cu"
auto float __T217;
# 65 "src/cuda/crys_kernel.cu"
auto float4 __T218;
# 66 "src/cuda/crys_kernel.cu"
auto float4 __T219;
# 67 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T220;
# 68 "src/cuda/crys_kernel.cu"
auto float __T221;
# 69 "src/cuda/crys_kernel.cu"
auto float4 __T222;
# 70 "src/cuda/crys_kernel.cu"
auto float __T223;
# 71 "src/cuda/crys_kernel.cu"
auto float __T224;
# 72 "src/cuda/crys_kernel.cu"
auto float __T225;
# 73 "src/cuda/crys_kernel.cu"
auto float __T226;
# 74 "src/cuda/crys_kernel.cu"
auto float4 __T227;
# 75 "src/cuda/crys_kernel.cu"
auto float4 __T228;
# 76 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T229;
# 77 "src/cuda/crys_kernel.cu"
auto float __T230;
# 78 "src/cuda/crys_kernel.cu"
auto float4 __T231;
# 79 "src/cuda/crys_kernel.cu"
auto float __T232;
# 80 "src/cuda/crys_kernel.cu"
auto float __T233;
# 81 "src/cuda/crys_kernel.cu"
auto float __T234;
# 82 "src/cuda/crys_kernel.cu"
auto float __T235;
# 83 "src/cuda/crys_kernel.cu"
auto float4 __T236;
# 84 "src/cuda/crys_kernel.cu"
auto float4 __T237;
# 85 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T238;
# 86 "src/cuda/crys_kernel.cu"
auto float __T239;
# 87 "src/cuda/crys_kernel.cu"
auto float4 __T240;
# 88 "src/cuda/crys_kernel.cu"
auto float __T241;
# 89 "src/cuda/crys_kernel.cu"
auto float __T242;
# 90 "src/cuda/crys_kernel.cu"
auto float __T243;
# 91 "src/cuda/crys_kernel.cu"
auto float __T244;
# 92 "src/cuda/crys_kernel.cu"
auto float4 __T245;
# 93 "src/cuda/crys_kernel.cu"
auto float4 __T246;
# 94 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T247;
# 95 "src/cuda/crys_kernel.cu"
auto float __T248;
# 96 "src/cuda/crys_kernel.cu"
auto float4 __T249;
# 97 "src/cuda/crys_kernel.cu"
auto float __T250;
# 98 "src/cuda/crys_kernel.cu"
auto float __T251;
# 99 "src/cuda/crys_kernel.cu"
auto float2 __T252;
# 100 "src/cuda/crys_kernel.cu"
auto float4 __T253;
# 101 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T254;
# 102 "src/cuda/crys_kernel.cu"
auto float __T255;
# 103 "src/cuda/crys_kernel.cu"
auto float4 __T256;
# 104 "src/cuda/crys_kernel.cu"
auto float __T257;
# 105 "src/cuda/crys_kernel.cu"
auto float __T258;
# 106 "src/cuda/crys_kernel.cu"
auto float2 __T259;
# 107 "src/cuda/crys_kernel.cu"
auto float4 __T260;
# 108 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T261;
# 109 "src/cuda/crys_kernel.cu"
auto float __T262;
# 110 "src/cuda/crys_kernel.cu"
auto float4 __T263;
# 111 "src/cuda/crys_kernel.cu"
auto float __T264;
# 112 "src/cuda/crys_kernel.cu"
auto float __T265;
# 113 "src/cuda/crys_kernel.cu"
auto float2 __T266;
# 114 "src/cuda/crys_kernel.cu"
auto float4 __T267;
# 115 "src/cuda/crys_kernel.cu"
auto __texture_type__ __T268;
# 116 "src/cuda/crys_kernel.cu"
auto float __T269;
# 117 "src/cuda/crys_kernel.cu"
auto float4 __T270;
# 118 "src/cuda/crys_kernel.cu"
auto float __T271;
# 119 "src/cuda/crys_kernel.cu"
auto float __T272;
# 120 "src/cuda/crys_kernel.cu"
auto float2 __T273;
# 121 "src/cuda/crys_kernel.cu"
auto float4 __T274;
# 59 "src/cuda/crys_kernel.cu"
auto int n1;
# 59 "src/cuda/crys_kernel.cu"
auto int n2;
# 59 "src/cuda/crys_kernel.cu"
auto int n3;
# 59 "src/cuda/crys_kernel.cu"
auto int n4;
# 60 "src/cuda/crys_kernel.cu"
auto int off1;
# 60 "src/cuda/crys_kernel.cu"
auto int off2;
# 60 "src/cuda/crys_kernel.cu"
auto int off3;
# 60 "src/cuda/crys_kernel.cu"
auto int off4;
# 61 "src/cuda/crys_kernel.cu"
auto int atom1;
# 61 "src/cuda/crys_kernel.cu"
auto int atom2;
# 61 "src/cuda/crys_kernel.cu"
auto int atom3;
# 61 "src/cuda/crys_kernel.cu"
auto int atom4;
# 71 "src/cuda/crys_kernel.cu"
auto float4 Atom1;
# 72 "src/cuda/crys_kernel.cu"
auto float4 Atom2;
# 73 "src/cuda/crys_kernel.cu"
auto float4 Atom3;
# 74 "src/cuda/crys_kernel.cu"
auto float4 Atom4;
# 75 "src/cuda/crys_kernel.cu"
auto float2 Param1;
# 76 "src/cuda/crys_kernel.cu"
auto float2 Param2;
# 77 "src/cuda/crys_kernel.cu"
auto float2 Param3;
# 78 "src/cuda/crys_kernel.cu"
auto float2 Param4;
# 80 "src/cuda/crys_kernel.cu"
auto float R12;
# 81 "src/cuda/crys_kernel.cu"
auto float R34;
# 82 "src/cuda/crys_kernel.cu"
auto float sum12;
# 83 "src/cuda/crys_kernel.cu"
auto float sum34;
# 84 "src/cuda/crys_kernel.cu"
auto float prod12;
# 85 "src/cuda/crys_kernel.cu"
auto float prod34;
# 86 "src/cuda/crys_kernel.cu"
auto float preexp;
# 88 "src/cuda/crys_kernel.cu"
auto float preintegral;
# 63 "src/cuda/crys_kernel.cu"
_Z8GetAtomsiRiS_S_S_(((int)((myWork.y))), (&atom1), (&atom2), (&atom3), (&atom4));
# 64 "src/cuda/crys_kernel.cu"
_Z5GetNsiiiiiRiS_S_S_(localthid, a1, a2, a3, a4, (&n1), (&n2), (&n3), (&n4));
# 65 "src/cuda/crys_kernel.cu"
_Z10GetOffsetsiRiS_S_S_(((int)((myWork.z))), (&off1), (&off2), (&off3), (&off4));
# 66 "src/cuda/crys_kernel.cu"
n1 += off1;
# 67 "src/cuda/crys_kernel.cu"
n2 += off2;
# 68 "src/cuda/crys_kernel.cu"
n3 += off3;
# 69 "src/cuda/crys_kernel.cu"
n4 += off4;
# 71 "src/cuda/crys_kernel.cu"
Atom1 = (((__T211 = __texture_var(texCoors)) , (__T212 = ((float)atom1))) , ((__T219 = (__ftexfetch(__T211, ((((((__T213.x) = __T212) , ((__T213.y) = (0.0F))) , ((__T213.z) = (0.0F))) , ((__T213.w) = (0.0F))) , __T213), 1))) , (((((__T214 = ((__T219.x))) , (__T215 = ((__T219.y)))) , (__T216 = ((__T219.z)))) , (__T217 = ((__T219.w)))) , ((((((__T218.x) = __T214) , ((__T218.y) = __T215)) , ((__T218.z) = __T216)) , ((__T218.w) = __T217)) , __T218))));
# 72 "src/cuda/crys_kernel.cu"
Atom2 = (((__T220 = __texture_var(texCoors)) , (__T221 = ((float)atom2))) , ((__T228 = (__ftexfetch(__T220, ((((((__T222.x) = __T221) , ((__T222.y) = (0.0F))) , ((__T222.z) = (0.0F))) , ((__T222.w) = (0.0F))) , __T222), 1))) , (((((__T223 = ((__T228.x))) , (__T224 = ((__T228.y)))) , (__T225 = ((__T228.z)))) , (__T226 = ((__T228.w)))) , ((((((__T227.x) = __T223) , ((__T227.y) = __T224)) , ((__T227.z) = __T225)) , ((__T227.w) = __T226)) , __T227))));
# 73 "src/cuda/crys_kernel.cu"
Atom3 = (((__T229 = __texture_var(texCoors)) , (__T230 = ((float)atom3))) , ((__T237 = (__ftexfetch(__T229, ((((((__T231.x) = __T230) , ((__T231.y) = (0.0F))) , ((__T231.z) = (0.0F))) , ((__T231.w) = (0.0F))) , __T231), 1))) , (((((__T232 = ((__T237.x))) , (__T233 = ((__T237.y)))) , (__T234 = ((__T237.z)))) , (__T235 = ((__T237.w)))) , ((((((__T236.x) = __T232) , ((__T236.y) = __T233)) , ((__T236.z) = __T234)) , ((__T236.w) = __T235)) , __T236))));
# 74 "src/cuda/crys_kernel.cu"
Atom4 = (((__T238 = __texture_var(texCoors)) , (__T239 = ((float)atom4))) , ((__T246 = (__ftexfetch(__T238, ((((((__T240.x) = __T239) , ((__T240.y) = (0.0F))) , ((__T240.z) = (0.0F))) , ((__T240.w) = (0.0F))) , __T240), 1))) , (((((__T241 = ((__T246.x))) , (__T242 = ((__T246.y)))) , (__T243 = ((__T246.z)))) , (__T244 = ((__T246.w)))) , ((((((__T245.x) = __T241) , ((__T245.y) = __T242)) , ((__T245.z) = __T243)) , ((__T245.w) = __T244)) , __T245))));
# 75 "src/cuda/crys_kernel.cu"
Param1 = (((__T247 = __texture_var(texSprms)) , (__T248 = ((float)n1))) , ((__T253 = (__ftexfetch(__T247, ((((((__T249.x) = __T248) , ((__T249.y) = (0.0F))) , ((__T249.z) = (0.0F))) , ((__T249.w) = (0.0F))) , __T249), 1))) , (((__T250 = ((__T253.x))) , (__T251 = ((__T253.y)))) , ((((__T252.x) = __T250) , ((__T252.y) = __T251)) , __T252))));
# 76 "src/cuda/crys_kernel.cu"
Param2 = (((__T254 = __texture_var(texSprms)) , (__T255 = ((float)n2))) , ((__T260 = (__ftexfetch(__T254, ((((((__T256.x) = __T255) , ((__T256.y) = (0.0F))) , ((__T256.z) = (0.0F))) , ((__T256.w) = (0.0F))) , __T256), 1))) , (((__T257 = ((__T260.x))) , (__T258 = ((__T260.y)))) , ((((__T259.x) = __T257) , ((__T259.y) = __T258)) , __T259))));
# 77 "src/cuda/crys_kernel.cu"
Param3 = (((__T261 = __texture_var(texSprms)) , (__T262 = ((float)n3))) , ((__T267 = (__ftexfetch(__T261, ((((((__T263.x) = __T262) , ((__T263.y) = (0.0F))) , ((__T263.z) = (0.0F))) , ((__T263.w) = (0.0F))) , __T263), 1))) , (((__T264 = ((__T267.x))) , (__T265 = ((__T267.y)))) , ((((__T266.x) = __T264) , ((__T266.y) = __T265)) , __T266))));
# 78 "src/cuda/crys_kernel.cu"
Param4 = (((__T268 = __texture_var(texSprms)) , (__T269 = ((float)n4))) , ((__T274 = (__ftexfetch(__T268, ((((((__T270.x) = __T269) , ((__T270.y) = (0.0F))) , ((__T270.z) = (0.0F))) , ((__T270.w) = (0.0F))) , __T270), 1))) , (((__T271 = ((__T274.x))) , (__T272 = ((__T274.y)))) , ((((__T273.x) = __T271) , ((__T273.y) = __T272)) , __T273))));
# 80 "src/cuda/crys_kernel.cu"
R12 = (_Z5dist26float4S_(Atom1, Atom2));
# 81 "src/cuda/crys_kernel.cu"
R34 = (_Z5dist26float4S_(Atom3, Atom4));
# 82 "src/cuda/crys_kernel.cu"
sum12 = (((Param1.x)) + ((Param2.x)));
# 83 "src/cuda/crys_kernel.cu"
sum34 = (((Param3.x)) + ((Param4.x)));
# 84 "src/cuda/crys_kernel.cu"
prod12 = (((Param1.x)) * ((Param2.x)));
# 85 "src/cuda/crys_kernel.cu"
prod34 = (((Param3.x)) * ((Param4.x)));
# 86 "src/cuda/crys_kernel.cu"
preexp = (((__fdividef(prod12, sum12)) * R12) + ((__fdividef(prod34, sum34)) * R34));
# 88 "src/cuda/crys_kernel.cu"
preintegral = ((__fdividef(((((((Param1.y)) * ((Param2.y))) * ((Param3.y))) * ((Param4.y))) * (__expf((-preexp)))), (sum12 * sum34))) * ((1.0F) / (__cuda_sqrtf((sum12 + sum34)))));
# 92 "src/cuda/crys_kernel.cu"
if ((preintegral * preintegral) > (9.999999998e-24F))
# 93 "src/cuda/crys_kernel.cu"
{
# 94 "src/cuda/crys_kernel.cu"
auto float3 Atomp;
# 95 "src/cuda/crys_kernel.cu"
auto float3 Atomq;
# 97 "src/cuda/crys_kernel.cu"
auto float rpq2;
# 98 "src/cuda/crys_kernel.cu"
auto float rho;
# 99 "src/cuda/crys_kernel.cu"
auto float weight;
# 94 "src/cuda/crys_kernel.cu"
Atomp = (_Z10ReducePair6float4S_6float2S0_f(Atom1, Atom2, Param1, Param2, sum12));
# 95 "src/cuda/crys_kernel.cu"
Atomq = (_Z10ReducePair6float4S_6float2S0_f(Atom3, Atom4, Param3, Param4, sum34));
# 97 "src/cuda/crys_kernel.cu"
rpq2 = (_Z5dist26float3S_(Atomp, Atomq));
# 98 "src/cuda/crys_kernel.cu"
rho = (__fdividef((sum12 * sum34), (sum12 + sum34)));
# 99 "src/cuda/crys_kernel.cu"
weight = (_Z4Rootf((rpq2 * rho)));
# 100 "src/cuda/crys_kernel.cu"
Result = (((34.98683548F) * preintegral) * weight);
# 101 "src/cuda/crys_kernel.cu"
}
# 102 "src/cuda/crys_kernel.cu"
}
# 103 "src/cuda/crys_kernel.cu"
(((float *)Data)[thid]) = Result;
# 104 "src/cuda/crys_kernel.cu"
__syncthreads();
# 104 "src/cuda/crys_kernel.cu"
{
# 106 "src/cuda/crys_kernel.cu"
auto unsigned s;
# 106 "src/cuda/crys_kernel.cu"
s = (((__cudaGet_blockDim().x)) >> 1);
# 106 "src/cuda/crys_kernel.cu"
for (; (s > 0U); s = (s >> 1))
# 107 "src/cuda/crys_kernel.cu"
{
# 108 "src/cuda/crys_kernel.cu"
if (((unsigned)thid) < s)
# 108 "src/cuda/crys_kernel.cu"
{
# 109 "src/cuda/crys_kernel.cu"
(((float *)Data)[thid]) += (((float *)Data)[(((unsigned)thid) + s)]);
# 109 "src/cuda/crys_kernel.cu"
}
# 110 "src/cuda/crys_kernel.cu"
__syncthreads();
# 111 "src/cuda/crys_kernel.cu"
}
# 111 "src/cuda/crys_kernel.cu"
}
# 113 "src/cuda/crys_kernel.cu"
if (!(thid))
# 113 "src/cuda/crys_kernel.cu"
{
# 114 "src/cuda/crys_kernel.cu"
(d_Output[Offset + blid]) = (((float *)Data)[0]);
# 114 "src/cuda/crys_kernel.cu"
}
# 115 "src/cuda/crys_kernel.cu"
} 
# 115 "src/cuda/crys_kernel.cu"
}}
#endif
#if !defined(__multi_core__)
# 118 "src/cuda/crys_kernel.cu"
__global__ __var_used__ void _Z11DoReductionPfS_P5uint2ii(
# 118 "src/cuda/crys_kernel.cu"
__in__(float *const d_ReductionSum,float *d_ReductionSum), 
# 118 "src/cuda/crys_kernel.cu"
__in__(float *const d_Output,float *d_Output), 
# 119 "src/cuda/crys_kernel.cu"
__in__(uint2 *const d_FinalReduce,uint2 *d_FinalReduce), 
# 119 "src/cuda/crys_kernel.cu"
__in__(const int block_size,int block_size), 
# 119 "src/cuda/crys_kernel.cu"
__in__(const int Offset,int Offset)){
# 119 "src/cuda/crys_kernel.cu"
{
# 120 "src/cuda/crys_kernel.cu"
{
# 121 "src/cuda/crys_kernel.cu"
auto int firstElement;
# 122 "src/cuda/crys_kernel.cu"
auto int offset;
# 123 "src/cuda/crys_kernel.cu"
__loc_sc__(__shared__,,auto ) float Result[64];
# 125 "src/cuda/crys_kernel.cu"
auto int blid;
# 126 "src/cuda/crys_kernel.cu"
auto int thid;
# 128 "src/cuda/crys_kernel.cu"
auto uint2 myWork;
# 125 "src/cuda/crys_kernel.cu"
blid = ((int)((__cudaGet_blockIdx().x)));
# 126 "src/cuda/crys_kernel.cu"
thid = ((int)((__cudaGet_threadIdx().x)));
# 128 "src/cuda/crys_kernel.cu"
myWork = (d_FinalReduce[(blid + Offset)]);
# 129 "src/cuda/crys_kernel.cu"
firstElement = ((int)((myWork.x)));
# 130 "src/cuda/crys_kernel.cu"
offset = ((int)((myWork.y)));
# 132 "src/cuda/crys_kernel.cu"
if (thid < offset)
# 132 "src/cuda/crys_kernel.cu"
{
# 133 "src/cuda/crys_kernel.cu"
(((float *)Result)[thid]) = (d_Output[(firstElement + thid)]);
# 133 "src/cuda/crys_kernel.cu"
}
# 133 "src/cuda/crys_kernel.cu"
else 
# 133 "src/cuda/crys_kernel.cu"
{
# 135 "src/cuda/crys_kernel.cu"
(((float *)Result)[thid]) = (0.0F);
# 135 "src/cuda/crys_kernel.cu"
}
# 136 "src/cuda/crys_kernel.cu"
__syncthreads();
# 136 "src/cuda/crys_kernel.cu"
{
# 138 "src/cuda/crys_kernel.cu"
auto unsigned s;
# 138 "src/cuda/crys_kernel.cu"
s = (((__cudaGet_blockDim().x)) >> 1);
# 138 "src/cuda/crys_kernel.cu"
for (; (s > 0U); s = (s >> 1))
# 139 "src/cuda/crys_kernel.cu"
{
# 140 "src/cuda/crys_kernel.cu"
if (((unsigned)thid) < s)
# 140 "src/cuda/crys_kernel.cu"
{
# 141 "src/cuda/crys_kernel.cu"
(((float *)Result)[thid]) += (((float *)Result)[(((unsigned)thid) + s)]);
# 141 "src/cuda/crys_kernel.cu"
}
# 142 "src/cuda/crys_kernel.cu"
__syncthreads();
# 143 "src/cuda/crys_kernel.cu"
}
# 143 "src/cuda/crys_kernel.cu"
}
# 145 "src/cuda/crys_kernel.cu"
if (!(thid))
# 145 "src/cuda/crys_kernel.cu"
{
# 146 "src/cuda/crys_kernel.cu"
(d_ReductionSum[blid + Offset]) = (((float *)Result)[0]);
# 146 "src/cuda/crys_kernel.cu"
}
# 147 "src/cuda/crys_kernel.cu"
} 
# 147 "src/cuda/crys_kernel.cu"
}}
#endif
#if defined(__cplusplus)
}
#if !defined(__CUDACC__) &&! defined(__CUDABE__) && !defined(__MULTI_CORE__)
}
#endif
#endif
