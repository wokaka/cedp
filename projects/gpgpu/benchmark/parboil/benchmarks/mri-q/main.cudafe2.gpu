#if defined(__cplusplus)
#if !defined(__CUDACC__) &&! defined(__CUDABE__) && !defined(__MULTI_CORE__)
namespace __cuda_emu {
#endif
extern "C" {
#endif
#if defined(__CUDACC__) || defined(__CUDABE__) || defined(__MULTI_CORE__) || defined(__cplusplus)
# 100 "src/cuda_ed5/gpufi.h"
struct _gpufi_data_;
# 12 "src/cuda_ed5/computeQ.cu"
struct kValues;
# 214 "/usr/lib/gcc/i486-linux-gnu/4.3.2/include/stddef.h" 3
typedef unsigned size_t;
#endif
#include "crt/device_runtime.h"
#if defined(__CUDACC__) || defined(__CUDABE__) || defined(__MULTI_CORE__) || defined(__cplusplus)
# 145 "/usr/include/bits/types.h" 3
typedef long __clock_t;
# 61 "/usr/include/time.h" 3
typedef __clock_t clock_t;
# 12 "src/cuda_ed5/computeQ.cu"
struct kValues {
# 14 "src/cuda_ed5/computeQ.cu"
float Kx;
# 15 "src/cuda_ed5/computeQ.cu"
float Ky;
# 16 "src/cuda_ed5/computeQ.cu"
float Kz;
# 17 "src/cuda_ed5/computeQ.cu"
float PhiMag;};
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 184 "/usr/include/time.h" 3
/*DEVICE_BUILTIN*/extern clock_t clock(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 38 "/usr/include/string.h" 3
/*DEVICE_BUILTIN*/extern void *memcpy(void *__restrict__, const void *__restrict__, size_t);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 59 "/usr/include/string.h" 3
/*DEVICE_BUILTIN*/extern void *memset(void *, int, size_t);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 65 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int abs(int) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long labs(long) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 69 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llabs(long long) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 71 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fabs(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 73 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fabsf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 76 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int min(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 78 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned umin(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 80 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llmin(long long, long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 82 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned long long ullmin(unsigned long long, unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 84 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fminf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 86 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fmin(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 89 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int max(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 91 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned umax(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 93 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llmax(long long, long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 95 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern unsigned long long ullmax(unsigned long long, unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 97 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fmaxf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 99 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fmax(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 102 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double sin(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 104 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float sinf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 107 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double cos(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 109 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float cosf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 112 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern void sincos(double, double *, double *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 114 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern void sincosf(float, float *, float *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 117 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double tan(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 119 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float tanf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 122 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double sqrt(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 124 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float sqrtf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 127 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double rsqrt(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 129 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float rsqrtf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 132 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double exp2(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 134 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float exp2f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 137 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double exp10(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 139 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float exp10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 142 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double expm1(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 144 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float expm1f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 147 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log2(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 149 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float log2f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 152 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log10(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 154 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float log10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 157 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 159 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float logf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 162 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double log1p(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 164 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float log1pf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 167 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double floor(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 169 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float floorf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 172 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double exp(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 174 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float expf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 177 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double cosh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 179 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float coshf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 182 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double sinh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 184 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float sinhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 187 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double tanh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 189 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float tanhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 192 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double acosh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 194 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float acoshf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 197 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double asinh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 199 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float asinhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 202 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double atanh(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 204 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float atanhf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 207 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double ldexp(double, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 209 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float ldexpf(float, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 212 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double logb(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 214 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float logbf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 217 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int ilogb(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 219 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int ilogbf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 222 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double scalbn(double, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 224 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float scalbnf(float, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 227 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double scalbln(double, long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 229 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float scalblnf(float, long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 232 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double frexp(double, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 234 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float frexpf(float, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 237 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double round(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 239 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float roundf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 242 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lround(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 244 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lroundf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 247 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llround(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 249 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llroundf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 252 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double rint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 254 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float rintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 257 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lrint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 259 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long lrintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 262 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llrint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 264 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern long long llrintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 267 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double nearbyint(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 269 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float nearbyintf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 272 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double ceil(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 274 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float ceilf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 277 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double trunc(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 279 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float truncf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 282 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fdim(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 284 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fdimf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 287 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double atan2(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 289 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float atan2f(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 292 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double atan(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 294 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float atanf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 297 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double asin(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 299 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float asinf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 302 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double acos(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 304 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float acosf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 307 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double hypot(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 309 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float hypotf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 312 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double cbrt(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 314 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float cbrtf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 317 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double pow(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 319 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float powf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 322 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double modf(double, double *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 324 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float modff(float, float *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 327 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fmod(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 329 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fmodf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 332 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double remainder(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 334 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float remainderf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 337 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double remquo(double, double, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 339 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float remquof(float, float, int *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 342 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erf(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 344 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erff(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 347 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erfinv(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 349 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erfinvf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 352 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erfc(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 354 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erfcf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 357 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double erfcinv(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 359 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float erfcinvf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 362 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double lgamma(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 364 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float lgammaf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 367 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double tgamma(double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 369 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float tgammaf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 372 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double copysign(double, double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 374 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float copysignf(float, float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 377 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double nextafter(double, double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 379 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float nextafterf(float, float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 382 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double nan(const char *) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 384 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float nanf(const char *) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 387 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isinf(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 389 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isinff(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 392 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isnan(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 394 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __isnanf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 408 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __finite(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 410 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern int __finitef(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 420 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern double fma(double, double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 422 "/usr/local/cuda/bin/../include/math_functions.h"
/*DEVICE_BUILTIN*/extern float fmaf(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 64 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __cosf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 66 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __sinf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 68 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __tanf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 82 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __sincosf(float, float *, float *);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 101 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __expf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 110 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __logf(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 113 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __log10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 121 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __exp10f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 145 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __log2f(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 154 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __powf(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 193 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/extern int __isinfl(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 196 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/extern int __finitel(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 231 "/usr/include/bits/mathcalls.h" 3
/*DEVICE_BUILTIN*/extern int __isnanl(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 36 "/usr/include/bits/mathinline.h" 3
/*DEVICE_BUILTIN*/extern __inline__ int __signbitf(float) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 42 "/usr/include/bits/mathinline.h" 3
/*DEVICE_BUILTIN*/extern __inline__ int __signbit(double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 48 "/usr/include/bits/mathinline.h" 3
/*DEVICE_BUILTIN*/extern __inline__ int __signbitl(long double) __attribute__((__const__));
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 60 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __mulhi(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 62 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __umulhi(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 65 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __mul64hi(long long, long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __umul64hi(unsigned long long, unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 70 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int_as_float(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 72 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float_as_int(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 76 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __syncthreads(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 78 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __prof_trigger(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 80 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __threadfence(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 82 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __threadfence_block(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 84 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __trap(void);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 86 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) void __brkpt(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 89 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __saturatef(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 92 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __sad(int, int, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 94 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __usad(unsigned, unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 97 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __mul24(int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 99 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __umul24(unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 102 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float fdividef(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 104 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdividef(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 107 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) double fdivide(double, double);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 140 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 142 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 144 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 146 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __float2int_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 149 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 151 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 153 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 155 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __float2uint_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 158 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_rn(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 160 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_rz(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 162 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_ru(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 164 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __int2float_rd(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 167 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_rn(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 169 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_rz(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 171 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_ru(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 173 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __uint2float_rd(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 176 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 178 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 180 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 182 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) long long __float2ll_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 185 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 187 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 189 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 191 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __float2ull_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 194 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __ll2float_rn(long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 197 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __ull2float_rn(unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 200 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned short __float2half_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 202 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __half2float(unsigned short);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 205 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_rn(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 207 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_rz(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 209 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_ru(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 211 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fadd_rd(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 214 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_rn(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 216 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_rz(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 218 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_ru(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 220 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmul_rd(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 223 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_rn(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 225 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_rz(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 227 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_ru(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 229 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fmaf_rd(float, float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 232 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 234 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 236 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 238 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __frcp_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 241 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_rn(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 243 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_rz(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 245 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_ru(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 247 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fsqrt_rd(float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 250 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_rn(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 252 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_rz(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 254 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_ru(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 256 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fdiv_rd(float, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 259 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __clz(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 261 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __ffs(int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 263 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __popc(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 265 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __brev(unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 268 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __clzll(long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 270 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __ffsll(long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 272 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __popcll(unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 274 "/usr/local/cuda/bin/../include/device_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned long long __brevll(unsigned long long);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 55 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicAdd(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 57 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicAdd(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 59 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicExch(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 61 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicExch(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 63 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float __fAtomicExch(float *, float);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 65 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicMin(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicMin(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 69 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicMax(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 71 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicMax(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 73 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicInc(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 75 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicDec(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 77 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicAnd(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 79 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicAnd(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 81 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicOr(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 83 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicOr(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 85 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicXor(int *, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 87 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicXor(unsigned *, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 89 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int __iAtomicCAS(int *, int, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 91 "/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) unsigned __uAtomicCAS(unsigned *, unsigned, unsigned);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 60 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) uint4 __utexfetchi(__texture_type__, int4);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 62 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int4 __itexfetchi(__texture_type__, int4);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 64 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float4 __ftexfetchi(__texture_type__, int4);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 67 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) uint4 __utexfetch(__texture_type__, float4, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 69 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) int4 __itexfetch(__texture_type__, float4, int);
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
# 71 "/usr/local/cuda/bin/../include/texture_fetch_functions.h"
/*DEVICE_BUILTIN*/___device__(extern  __no_sc__) float4 __ftexfetch(__texture_type__, float4, int);
#endif
#endif
#if !defined(__multi_core__)
# 14 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) int _Z10GPUFI_EXITi(int);
#endif
#if !defined(__multi_core__)
# 412 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) int _Z12GPUFI_STRCMPPcS_(char *, char *);
#endif
#if !defined(__multi_core__)
# 418 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z10CudaStrcpyPcS_i(char *, char *, int);
#endif
#if !defined(__multi_core__)
# 428 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z16GPUFI_KERNEL_DECPi(int *);
#endif
#if !defined(__multi_core__)
# 433 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z16GPUFI_KERNEL_SETPii(int *, int);
#endif
#if !defined(__multi_core__)
# 535 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z12GPUFI_KERNELP12_gpufi_data_iiPc(struct _gpufi_data_ *, int, int, char *);
#endif
#if !defined(__multi_core__)
# 602 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z17GPUFI_KERNEL_LOOPP12_gpufi_data_i(struct _gpufi_data_ *, int);
#endif
#if !defined(__multi_core__)
# 607 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z22GPUFI_KERNEL_ITERATIONP12_gpufi_data_(struct _gpufi_data_ *);
#endif
#if !defined(__multi_core__)
# 800 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z21GPUFI_KERNEL_VARIABLEP12_gpufi_data_iPcPii(struct _gpufi_data_ *, int, char *, int *, int);
#endif
#if !defined(__multi_core__)
# 805 "src/cuda_ed5/gpufi_kernel.cu"
___device__(extern  __no_sc__) void _Z27GPUFI_KERNEL_VARIABLE_FORCEP12_gpufi_data_iPcPi(struct _gpufi_data_ *, int, char *, int *);
#endif
#if !defined(__multi_core__)
# 29 "src/cuda_ed5/computeQ.cu"
__global__ __var_used__ extern void _Z17ComputePhiMag_GPUPfS_S_i(__in_type__(float *const,float *), __in_type__(float *const,float *), __in_type__(float *const,float *), __in_type__(const int,int));
#endif
#if !defined(__multi_core__)
# 66 "src/cuda_ed5/computeQ.cu"
__global__ __var_used__ extern void _Z12ComputeQ_GPUiiPfS_S_S_S_(__in_type__(const int,int), __in_type__(const int,int), __in_type__(float *const,float *), __in_type__(float *const,float *), __in_type__(float *const,float *), __in_type__(float *const,float *), __in_type__(float *const,float *));
#endif
# 10 "src/cuda_ed5/gpufi_kernel.cu"
__loc_sc__(__device__,,) struct _gpufi_data_ *gpufi_dev;
# 24 "src/cuda_ed5/computeQ.cu"
__loc_sc__(__constant__,,) struct kValues ck[1024];
#include "common_functions.h"
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__CUDABE__)
#if !defined(__multi_core__)
#endif
#endif
#if !defined(__multi_core__)
# 14 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) int _Z10GPUFI_EXITi(
# 14 "src/cuda_ed5/gpufi_kernel.cu"
int errno)
# 15 "src/cuda_ed5/gpufi_kernel.cu"
{
# 16 "src/cuda_ed5/gpufi_kernel.cu"
auto int *addr;
# 16 "src/cuda_ed5/gpufi_kernel.cu"
addr = ((int *)0);
# 18 "src/cuda_ed5/gpufi_kernel.cu"
(*addr) = 128;
# 19 "src/cuda_ed5/gpufi_kernel.cu"
return 100 / errno;
# 20 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 412 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) int _Z12GPUFI_STRCMPPcS_(
# 412 "src/cuda_ed5/gpufi_kernel.cu"
char *src, 
# 412 "src/cuda_ed5/gpufi_kernel.cu"
char *dst)
# 413 "src/cuda_ed5/gpufi_kernel.cu"
{
# 414 "src/cuda_ed5/gpufi_kernel.cu"
return 1;
# 415 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 418 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z10CudaStrcpyPcS_i(
# 418 "src/cuda_ed5/gpufi_kernel.cu"
char *dst, 
# 418 "src/cuda_ed5/gpufi_kernel.cu"
char *src, 
# 418 "src/cuda_ed5/gpufi_kernel.cu"
int max)
# 419 "src/cuda_ed5/gpufi_kernel.cu"
{
# 419 "src/cuda_ed5/gpufi_kernel.cu"
# 420 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 428 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z16GPUFI_KERNEL_DECPi(
# 428 "src/cuda_ed5/gpufi_kernel.cu"
int *count)
# 429 "src/cuda_ed5/gpufi_kernel.cu"
{
# 429 "src/cuda_ed5/gpufi_kernel.cu"
# 430 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 433 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z16GPUFI_KERNEL_SETPii(
# 433 "src/cuda_ed5/gpufi_kernel.cu"
int *count, 
# 433 "src/cuda_ed5/gpufi_kernel.cu"
int value)
# 434 "src/cuda_ed5/gpufi_kernel.cu"
{
# 434 "src/cuda_ed5/gpufi_kernel.cu"
# 435 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 535 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z12GPUFI_KERNELP12_gpufi_data_iiPc(
# 535 "src/cuda_ed5/gpufi_kernel.cu"
struct _gpufi_data_ *gpufi_dev, 
# 535 "src/cuda_ed5/gpufi_kernel.cu"
int begin, 
# 535 "src/cuda_ed5/gpufi_kernel.cu"
int type, 
# 535 "src/cuda_ed5/gpufi_kernel.cu"
char *name)
# 536 "src/cuda_ed5/gpufi_kernel.cu"
{
# 536 "src/cuda_ed5/gpufi_kernel.cu"
# 537 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 602 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z17GPUFI_KERNEL_LOOPP12_gpufi_data_i(
# 602 "src/cuda_ed5/gpufi_kernel.cu"
struct _gpufi_data_ *gpufi_dev, 
# 602 "src/cuda_ed5/gpufi_kernel.cu"
int begin)
# 603 "src/cuda_ed5/gpufi_kernel.cu"
{
# 603 "src/cuda_ed5/gpufi_kernel.cu"
# 604 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 607 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z22GPUFI_KERNEL_ITERATIONP12_gpufi_data_(
# 607 "src/cuda_ed5/gpufi_kernel.cu"
struct _gpufi_data_ *gpufi_dev)
# 608 "src/cuda_ed5/gpufi_kernel.cu"
{
# 608 "src/cuda_ed5/gpufi_kernel.cu"
# 609 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 800 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z21GPUFI_KERNEL_VARIABLEP12_gpufi_data_iPcPii(
# 800 "src/cuda_ed5/gpufi_kernel.cu"
struct _gpufi_data_ *gpufi_dev, 
# 800 "src/cuda_ed5/gpufi_kernel.cu"
int varid, 
# 800 "src/cuda_ed5/gpufi_kernel.cu"
char *name, 
# 800 "src/cuda_ed5/gpufi_kernel.cu"
int *variable, 
# 800 "src/cuda_ed5/gpufi_kernel.cu"
int var_type)
# 801 "src/cuda_ed5/gpufi_kernel.cu"
{
# 801 "src/cuda_ed5/gpufi_kernel.cu"
# 802 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 805 "src/cuda_ed5/gpufi_kernel.cu"
___device__( __no_sc__) void _Z27GPUFI_KERNEL_VARIABLE_FORCEP12_gpufi_data_iPcPi(
# 805 "src/cuda_ed5/gpufi_kernel.cu"
struct _gpufi_data_ *gpufi_dev, 
# 805 "src/cuda_ed5/gpufi_kernel.cu"
int varid, 
# 805 "src/cuda_ed5/gpufi_kernel.cu"
char *name, 
# 805 "src/cuda_ed5/gpufi_kernel.cu"
int *variable)
# 806 "src/cuda_ed5/gpufi_kernel.cu"
{
# 806 "src/cuda_ed5/gpufi_kernel.cu"
# 807 "src/cuda_ed5/gpufi_kernel.cu"
}
#endif
#if !defined(__multi_core__)
# 29 "src/cuda_ed5/computeQ.cu"
__global__ __var_used__ void _Z17ComputePhiMag_GPUPfS_S_i(
# 29 "src/cuda_ed5/computeQ.cu"
__in__(float *const phiR,float *phiR), 
# 29 "src/cuda_ed5/computeQ.cu"
__in__(float *const phiI,float *phiI), 
# 29 "src/cuda_ed5/computeQ.cu"
__in__(float *const phiMag,float *phiMag), 
# 29 "src/cuda_ed5/computeQ.cu"
__in__(const int numK,int numK)){
# 29 "src/cuda_ed5/computeQ.cu"
{
# 30 "src/cuda_ed5/computeQ.cu"
{
# 31 "src/cuda_ed5/computeQ.cu"
auto int numK_dup;
# 33 "src/cuda_ed5/computeQ.cu"
auto float *phiR_dup;
# 34 "src/cuda_ed5/computeQ.cu"
auto float *phiI_dup;
# 35 "src/cuda_ed5/computeQ.cu"
auto float *phiMag_dup;
# 37 "src/cuda_ed5/computeQ.cu"
auto int indexK;
# 38 "src/cuda_ed5/computeQ.cu"
auto int indexK_dup;
# 31 "src/cuda_ed5/computeQ.cu"
numK_dup = numK;
# 33 "src/cuda_ed5/computeQ.cu"
phiR_dup = phiR;
# 34 "src/cuda_ed5/computeQ.cu"
phiI_dup = phiI;
# 35 "src/cuda_ed5/computeQ.cu"
phiMag_dup = phiMag;
# 37 "src/cuda_ed5/computeQ.cu"
indexK = ((int)((((__cudaGet_blockIdx().x)) * 512U) + ((__cudaGet_threadIdx().x))));
# 38 "src/cuda_ed5/computeQ.cu"
indexK_dup = ((int)((((__cudaGet_blockIdx().x)) * 512U) + ((__cudaGet_threadIdx().x))));
# 40 "src/cuda_ed5/computeQ.cu"
{
# 40 "src/cuda_ed5/computeQ.cu"
if (indexK != indexK_dup)
# 40 "src/cuda_ed5/computeQ.cu"
{
# 40 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 40 "src/cuda_ed5/computeQ.cu"
}
# 40 "src/cuda_ed5/computeQ.cu"
}
# 41 "src/cuda_ed5/computeQ.cu"
{
# 41 "src/cuda_ed5/computeQ.cu"
if (numK != numK_dup)
# 41 "src/cuda_ed5/computeQ.cu"
{
# 41 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 41 "src/cuda_ed5/computeQ.cu"
}
# 41 "src/cuda_ed5/computeQ.cu"
}
# 42 "src/cuda_ed5/computeQ.cu"
if (indexK < numK)
# 43 "src/cuda_ed5/computeQ.cu"
{
# 47 "src/cuda_ed5/computeQ.cu"
auto float real;
# 48 "src/cuda_ed5/computeQ.cu"
auto float real_dup;
# 53 "src/cuda_ed5/computeQ.cu"
auto float imag;
# 54 "src/cuda_ed5/computeQ.cu"
auto float imag_dup;
# 45 "src/cuda_ed5/computeQ.cu"
if (phiR != phiR_dup)
# 45 "src/cuda_ed5/computeQ.cu"
{
# 45 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 45 "src/cuda_ed5/computeQ.cu"
}
# 46 "src/cuda_ed5/computeQ.cu"
{
# 46 "src/cuda_ed5/computeQ.cu"
if (indexK != indexK_dup)
# 46 "src/cuda_ed5/computeQ.cu"
{
# 46 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 46 "src/cuda_ed5/computeQ.cu"
}
# 46 "src/cuda_ed5/computeQ.cu"
}
# 47 "src/cuda_ed5/computeQ.cu"
real = (phiR[indexK]);
# 48 "src/cuda_ed5/computeQ.cu"
real_dup = (phiR[indexK]);
# 51 "src/cuda_ed5/computeQ.cu"
if (phiI != phiI_dup)
# 51 "src/cuda_ed5/computeQ.cu"
{
# 51 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 51 "src/cuda_ed5/computeQ.cu"
}
# 52 "src/cuda_ed5/computeQ.cu"
{
# 52 "src/cuda_ed5/computeQ.cu"
if (indexK != indexK_dup)
# 52 "src/cuda_ed5/computeQ.cu"
{
# 52 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 52 "src/cuda_ed5/computeQ.cu"
}
# 52 "src/cuda_ed5/computeQ.cu"
}
# 53 "src/cuda_ed5/computeQ.cu"
imag = (phiI[indexK]);
# 54 "src/cuda_ed5/computeQ.cu"
imag_dup = (phiI[indexK]);
# 57 "src/cuda_ed5/computeQ.cu"
if (phiMag != phiMag_dup)
# 57 "src/cuda_ed5/computeQ.cu"
{
# 57 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 57 "src/cuda_ed5/computeQ.cu"
}
# 58 "src/cuda_ed5/computeQ.cu"
{
# 58 "src/cuda_ed5/computeQ.cu"
if (indexK != indexK_dup)
# 58 "src/cuda_ed5/computeQ.cu"
{
# 58 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 58 "src/cuda_ed5/computeQ.cu"
}
# 58 "src/cuda_ed5/computeQ.cu"
}
# 59 "src/cuda_ed5/computeQ.cu"
{
# 59 "src/cuda_ed5/computeQ.cu"
if (real != real_dup)
# 59 "src/cuda_ed5/computeQ.cu"
{
# 59 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 59 "src/cuda_ed5/computeQ.cu"
}
# 59 "src/cuda_ed5/computeQ.cu"
}
# 60 "src/cuda_ed5/computeQ.cu"
{
# 60 "src/cuda_ed5/computeQ.cu"
if (imag != imag_dup)
# 60 "src/cuda_ed5/computeQ.cu"
{
# 60 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 60 "src/cuda_ed5/computeQ.cu"
}
# 60 "src/cuda_ed5/computeQ.cu"
}
# 61 "src/cuda_ed5/computeQ.cu"
(phiMag[indexK]) = ((real * real) + (imag * imag));
# 62 "src/cuda_ed5/computeQ.cu"
{
# 62 "src/cuda_ed5/computeQ.cu"
if ((phiMag[indexK]) != ((real * real) + (imag * imag)))
# 62 "src/cuda_ed5/computeQ.cu"
{
# 62 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 62 "src/cuda_ed5/computeQ.cu"
}
# 62 "src/cuda_ed5/computeQ.cu"
}
# 63 "src/cuda_ed5/computeQ.cu"
}
# 64 "src/cuda_ed5/computeQ.cu"
} 
# 64 "src/cuda_ed5/computeQ.cu"
}}
#endif
#if !defined(__multi_core__)
# 66 "src/cuda_ed5/computeQ.cu"
__global__ __var_used__ void _Z12ComputeQ_GPUiiPfS_S_S_S_(
# 66 "src/cuda_ed5/computeQ.cu"
__in__(const int numK,int numK), 
# 66 "src/cuda_ed5/computeQ.cu"
__in__(const int __val_param(kGlobalIndex),int __val_param(kGlobalIndex)), 
# 66 "src/cuda_ed5/computeQ.cu"
__in__(float *const x,float *x), 
# 66 "src/cuda_ed5/computeQ.cu"
__in__(float *const y,float *y), 
# 66 "src/cuda_ed5/computeQ.cu"
__in__(float *const z,float *z), 
# 66 "src/cuda_ed5/computeQ.cu"
__in__(float *const Qr,float *Qr), 
# 66 "src/cuda_ed5/computeQ.cu"
__in__(float *const Qi,float *Qi)){__copy_param(int kGlobalIndex,__val_param(kGlobalIndex));
# 66 "src/cuda_ed5/computeQ.cu"
{
# 67 "src/cuda_ed5/computeQ.cu"
{
# 68 "src/cuda_ed5/computeQ.cu"
auto int numK_dup;
# 69 "src/cuda_ed5/computeQ.cu"
auto int kGlobalIndex_dup;
# 71 "src/cuda_ed5/computeQ.cu"
auto float *x_dup;
# 72 "src/cuda_ed5/computeQ.cu"
auto float *y_dup;
# 73 "src/cuda_ed5/computeQ.cu"
auto float *z_dup;
# 74 "src/cuda_ed5/computeQ.cu"
auto float *Qr_dup;
# 75 "src/cuda_ed5/computeQ.cu"
auto float *Qi_dup;
# 77 "src/cuda_ed5/computeQ.cu"
auto float sX;
# 78 "src/cuda_ed5/computeQ.cu"
auto float sY;
# 79 "src/cuda_ed5/computeQ.cu"
auto float sZ;
# 80 "src/cuda_ed5/computeQ.cu"
auto float sQr;
# 81 "src/cuda_ed5/computeQ.cu"
auto float sQi;
# 89 "src/cuda_ed5/computeQ.cu"
auto int xIndex;
# 90 "src/cuda_ed5/computeQ.cu"
auto int xIndex_dup;
# 93 "src/cuda_ed5/computeQ.cu"
auto int kIndex;
# 94 "src/cuda_ed5/computeQ.cu"
auto int kIndex_dup;
# 100 "src/cuda_ed5/computeQ.cu"
auto float sX_dup;
# 106 "src/cuda_ed5/computeQ.cu"
auto float sY_dup;
# 112 "src/cuda_ed5/computeQ.cu"
auto float sZ_dup;
# 118 "src/cuda_ed5/computeQ.cu"
auto float sQr_dup;
# 124 "src/cuda_ed5/computeQ.cu"
auto float sQi_dup;
# 68 "src/cuda_ed5/computeQ.cu"
numK_dup = numK;
# 69 "src/cuda_ed5/computeQ.cu"
kGlobalIndex_dup = kGlobalIndex;
# 71 "src/cuda_ed5/computeQ.cu"
x_dup = x;
# 72 "src/cuda_ed5/computeQ.cu"
y_dup = y;
# 73 "src/cuda_ed5/computeQ.cu"
z_dup = z;
# 74 "src/cuda_ed5/computeQ.cu"
Qr_dup = Qr;
# 75 "src/cuda_ed5/computeQ.cu"
Qi_dup = Qi;
# 89 "src/cuda_ed5/computeQ.cu"
xIndex = ((int)((((__cudaGet_blockIdx().x)) * 256U) + ((__cudaGet_threadIdx().x))));
# 90 "src/cuda_ed5/computeQ.cu"
xIndex_dup = ((int)((((__cudaGet_blockIdx().x)) * 256U) + ((__cudaGet_threadIdx().x))));
# 93 "src/cuda_ed5/computeQ.cu"
kIndex = 0;
# 94 "src/cuda_ed5/computeQ.cu"
kIndex_dup = 0;
# 97 "src/cuda_ed5/computeQ.cu"
if (x != x_dup)
# 97 "src/cuda_ed5/computeQ.cu"
{
# 97 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 97 "src/cuda_ed5/computeQ.cu"
}
# 98 "src/cuda_ed5/computeQ.cu"
{
# 98 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 98 "src/cuda_ed5/computeQ.cu"
{
# 98 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 98 "src/cuda_ed5/computeQ.cu"
}
# 98 "src/cuda_ed5/computeQ.cu"
}
# 99 "src/cuda_ed5/computeQ.cu"
sX = (x[xIndex]);
# 100 "src/cuda_ed5/computeQ.cu"
sX_dup = (x[xIndex]);
# 103 "src/cuda_ed5/computeQ.cu"
if (y != y_dup)
# 103 "src/cuda_ed5/computeQ.cu"
{
# 103 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 103 "src/cuda_ed5/computeQ.cu"
}
# 104 "src/cuda_ed5/computeQ.cu"
{
# 104 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 104 "src/cuda_ed5/computeQ.cu"
{
# 104 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 104 "src/cuda_ed5/computeQ.cu"
}
# 104 "src/cuda_ed5/computeQ.cu"
}
# 105 "src/cuda_ed5/computeQ.cu"
sY = (y[xIndex]);
# 106 "src/cuda_ed5/computeQ.cu"
sY_dup = (y[xIndex]);
# 109 "src/cuda_ed5/computeQ.cu"
if (z != z_dup)
# 109 "src/cuda_ed5/computeQ.cu"
{
# 109 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 109 "src/cuda_ed5/computeQ.cu"
}
# 110 "src/cuda_ed5/computeQ.cu"
{
# 110 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 110 "src/cuda_ed5/computeQ.cu"
{
# 110 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 110 "src/cuda_ed5/computeQ.cu"
}
# 110 "src/cuda_ed5/computeQ.cu"
}
# 111 "src/cuda_ed5/computeQ.cu"
sZ = (z[xIndex]);
# 112 "src/cuda_ed5/computeQ.cu"
sZ_dup = (z[xIndex]);
# 115 "src/cuda_ed5/computeQ.cu"
if (Qr != Qr_dup)
# 115 "src/cuda_ed5/computeQ.cu"
{
# 115 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 115 "src/cuda_ed5/computeQ.cu"
}
# 116 "src/cuda_ed5/computeQ.cu"
{
# 116 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 116 "src/cuda_ed5/computeQ.cu"
{
# 116 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 116 "src/cuda_ed5/computeQ.cu"
}
# 116 "src/cuda_ed5/computeQ.cu"
}
# 117 "src/cuda_ed5/computeQ.cu"
sQr = (Qr[xIndex]);
# 118 "src/cuda_ed5/computeQ.cu"
sQr_dup = (Qr[xIndex]);
# 121 "src/cuda_ed5/computeQ.cu"
if (Qi != Qi_dup)
# 121 "src/cuda_ed5/computeQ.cu"
{
# 121 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 121 "src/cuda_ed5/computeQ.cu"
}
# 122 "src/cuda_ed5/computeQ.cu"
{
# 122 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 122 "src/cuda_ed5/computeQ.cu"
{
# 122 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 122 "src/cuda_ed5/computeQ.cu"
}
# 122 "src/cuda_ed5/computeQ.cu"
}
# 123 "src/cuda_ed5/computeQ.cu"
sQi = (Qi[xIndex]);
# 124 "src/cuda_ed5/computeQ.cu"
sQi_dup = (Qi[xIndex]);
# 130 "src/cuda_ed5/computeQ.cu"
{
# 130 "src/cuda_ed5/computeQ.cu"
if (numK != numK_dup)
# 130 "src/cuda_ed5/computeQ.cu"
{
# 130 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 130 "src/cuda_ed5/computeQ.cu"
}
# 130 "src/cuda_ed5/computeQ.cu"
}
# 131 "src/cuda_ed5/computeQ.cu"
if (numK % 2)
# 132 "src/cuda_ed5/computeQ.cu"
{
# 138 "src/cuda_ed5/computeQ.cu"
auto float expArg;
# 139 "src/cuda_ed5/computeQ.cu"
auto float expArg_dup;
# 135 "src/cuda_ed5/computeQ.cu"
{
# 135 "src/cuda_ed5/computeQ.cu"
if (sX != sX_dup)
# 135 "src/cuda_ed5/computeQ.cu"
{
# 135 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 135 "src/cuda_ed5/computeQ.cu"
}
# 135 "src/cuda_ed5/computeQ.cu"
}
# 136 "src/cuda_ed5/computeQ.cu"
{
# 136 "src/cuda_ed5/computeQ.cu"
if (sY != sY_dup)
# 136 "src/cuda_ed5/computeQ.cu"
{
# 136 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 136 "src/cuda_ed5/computeQ.cu"
}
# 136 "src/cuda_ed5/computeQ.cu"
}
# 137 "src/cuda_ed5/computeQ.cu"
{
# 137 "src/cuda_ed5/computeQ.cu"
if (sZ != sZ_dup)
# 137 "src/cuda_ed5/computeQ.cu"
{
# 137 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 137 "src/cuda_ed5/computeQ.cu"
}
# 137 "src/cuda_ed5/computeQ.cu"
}
# 138 "src/cuda_ed5/computeQ.cu"
expArg = ((float)((6.283185307179586232) * ((double)((((((ck[0]).Kx)) * sX) + ((((ck[0]).Ky)) * sY)) + ((((ck[0]).Kz)) * sZ)))));
# 139 "src/cuda_ed5/computeQ.cu"
expArg_dup = ((float)((6.283185307179586232) * ((double)((((((ck[0]).Kx)) * sX) + ((((ck[0]).Ky)) * sY)) + ((((ck[0]).Kz)) * sZ)))));
# 141 "src/cuda_ed5/computeQ.cu"
{
# 141 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 141 "src/cuda_ed5/computeQ.cu"
{
# 141 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 141 "src/cuda_ed5/computeQ.cu"
}
# 141 "src/cuda_ed5/computeQ.cu"
}
# 142 "src/cuda_ed5/computeQ.cu"
sQr += ((((ck[0]).PhiMag)) * (__cuda_cosf(expArg)));
# 144 "src/cuda_ed5/computeQ.cu"
{
# 144 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 144 "src/cuda_ed5/computeQ.cu"
{
# 144 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 144 "src/cuda_ed5/computeQ.cu"
}
# 144 "src/cuda_ed5/computeQ.cu"
}
# 145 "src/cuda_ed5/computeQ.cu"
sQi += ((((ck[0]).PhiMag)) * (__cuda_sinf(expArg)));
# 146 "src/cuda_ed5/computeQ.cu"
{
# 146 "src/cuda_ed5/computeQ.cu"
if (kIndex != kIndex_dup)
# 146 "src/cuda_ed5/computeQ.cu"
{
# 146 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 146 "src/cuda_ed5/computeQ.cu"
}
# 146 "src/cuda_ed5/computeQ.cu"
}
# 147 "src/cuda_ed5/computeQ.cu"
kIndex++;
# 148 "src/cuda_ed5/computeQ.cu"
kIndex_dup++;
# 149 "src/cuda_ed5/computeQ.cu"
{
# 149 "src/cuda_ed5/computeQ.cu"
if (kGlobalIndex != kGlobalIndex_dup)
# 149 "src/cuda_ed5/computeQ.cu"
{
# 149 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 149 "src/cuda_ed5/computeQ.cu"
}
# 149 "src/cuda_ed5/computeQ.cu"
}
# 150 "src/cuda_ed5/computeQ.cu"
kGlobalIndex++;
# 151 "src/cuda_ed5/computeQ.cu"
kGlobalIndex_dup++;
# 152 "src/cuda_ed5/computeQ.cu"
}
# 153 "src/cuda_ed5/computeQ.cu"
for (; (((kIndex < 1024) && (kIndex == kIndex_dup)) && (((kGlobalIndex < numK) && (kGlobalIndex == kGlobalIndex_dup)) && (numK == numK_dup))); (((kIndex += 2) , (kGlobalIndex += 2)) , (kIndex_dup += 2)) , (kGlobalIndex_dup += 2))
# 154 "src/cuda_ed5/computeQ.cu"
{
# 161 "src/cuda_ed5/computeQ.cu"
auto float expArg;
# 162 "src/cuda_ed5/computeQ.cu"
auto float expArg_dup;
# 163 "src/cuda_ed5/computeQ.cu"
auto int kIndex1;
# 164 "src/cuda_ed5/computeQ.cu"
auto int kIndex1_dup;
# 165 "src/cuda_ed5/computeQ.cu"
auto float expArg1;
# 166 "src/cuda_ed5/computeQ.cu"
auto float expArg1_dup;
# 157 "src/cuda_ed5/computeQ.cu"
{
# 157 "src/cuda_ed5/computeQ.cu"
if (kIndex != kIndex_dup)
# 157 "src/cuda_ed5/computeQ.cu"
{
# 157 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 157 "src/cuda_ed5/computeQ.cu"
}
# 157 "src/cuda_ed5/computeQ.cu"
}
# 158 "src/cuda_ed5/computeQ.cu"
{
# 158 "src/cuda_ed5/computeQ.cu"
if (sX != sX_dup)
# 158 "src/cuda_ed5/computeQ.cu"
{
# 158 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 158 "src/cuda_ed5/computeQ.cu"
}
# 158 "src/cuda_ed5/computeQ.cu"
}
# 159 "src/cuda_ed5/computeQ.cu"
{
# 159 "src/cuda_ed5/computeQ.cu"
if (sY != sY_dup)
# 159 "src/cuda_ed5/computeQ.cu"
{
# 159 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 159 "src/cuda_ed5/computeQ.cu"
}
# 159 "src/cuda_ed5/computeQ.cu"
}
# 160 "src/cuda_ed5/computeQ.cu"
{
# 160 "src/cuda_ed5/computeQ.cu"
if (sZ != sZ_dup)
# 160 "src/cuda_ed5/computeQ.cu"
{
# 160 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 160 "src/cuda_ed5/computeQ.cu"
}
# 160 "src/cuda_ed5/computeQ.cu"
}
# 161 "src/cuda_ed5/computeQ.cu"
expArg = ((float)((6.283185307179586232) * ((double)((((((ck[kIndex]).Kx)) * sX) + ((((ck[kIndex]).Ky)) * sY)) + ((((ck[kIndex]).Kz)) * sZ)))));
# 162 "src/cuda_ed5/computeQ.cu"
expArg_dup = ((float)((6.283185307179586232) * ((double)((((((ck[kIndex]).Kx)) * sX) + ((((ck[kIndex]).Ky)) * sY)) + ((((ck[kIndex]).Kz)) * sZ)))));
# 168 "src/cuda_ed5/computeQ.cu"
{
# 168 "src/cuda_ed5/computeQ.cu"
if (kIndex != kIndex_dup)
# 168 "src/cuda_ed5/computeQ.cu"
{
# 168 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 168 "src/cuda_ed5/computeQ.cu"
}
# 168 "src/cuda_ed5/computeQ.cu"
}
# 169 "src/cuda_ed5/computeQ.cu"
{
# 169 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 169 "src/cuda_ed5/computeQ.cu"
{
# 169 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 169 "src/cuda_ed5/computeQ.cu"
}
# 169 "src/cuda_ed5/computeQ.cu"
}
# 170 "src/cuda_ed5/computeQ.cu"
sQr += ((((ck[kIndex]).PhiMag)) * (__cuda_cosf(expArg)));
# 171 "src/cuda_ed5/computeQ.cu"
sQr_dup += ((((ck[kIndex]).PhiMag)) * (__cuda_cosf(expArg)));
# 173 "src/cuda_ed5/computeQ.cu"
{
# 173 "src/cuda_ed5/computeQ.cu"
if (kIndex != kIndex_dup)
# 173 "src/cuda_ed5/computeQ.cu"
{
# 173 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 173 "src/cuda_ed5/computeQ.cu"
}
# 173 "src/cuda_ed5/computeQ.cu"
}
# 174 "src/cuda_ed5/computeQ.cu"
{
# 174 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 174 "src/cuda_ed5/computeQ.cu"
{
# 174 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 174 "src/cuda_ed5/computeQ.cu"
}
# 174 "src/cuda_ed5/computeQ.cu"
}
# 175 "src/cuda_ed5/computeQ.cu"
sQi += ((((ck[kIndex]).PhiMag)) * (__cuda_sinf(expArg)));
# 176 "src/cuda_ed5/computeQ.cu"
{
# 176 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 176 "src/cuda_ed5/computeQ.cu"
{
# 176 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 176 "src/cuda_ed5/computeQ.cu"
}
# 176 "src/cuda_ed5/computeQ.cu"
}
# 177 "src/cuda_ed5/computeQ.cu"
sQi_dup += ((((ck[kIndex]).PhiMag)) * (__cuda_sinf(expArg)));
# 178 "src/cuda_ed5/computeQ.cu"
{
# 178 "src/cuda_ed5/computeQ.cu"
if (kIndex != kIndex_dup)
# 178 "src/cuda_ed5/computeQ.cu"
{
# 178 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 178 "src/cuda_ed5/computeQ.cu"
}
# 178 "src/cuda_ed5/computeQ.cu"
}
# 179 "src/cuda_ed5/computeQ.cu"
kIndex1_dup = (kIndex + 1);
# 180 "src/cuda_ed5/computeQ.cu"
kIndex1 = (kIndex + 1);
# 182 "src/cuda_ed5/computeQ.cu"
{
# 182 "src/cuda_ed5/computeQ.cu"
if (kIndex1 != kIndex1_dup)
# 182 "src/cuda_ed5/computeQ.cu"
{
# 182 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 182 "src/cuda_ed5/computeQ.cu"
}
# 182 "src/cuda_ed5/computeQ.cu"
}
# 183 "src/cuda_ed5/computeQ.cu"
{
# 183 "src/cuda_ed5/computeQ.cu"
if (sX != sX_dup)
# 183 "src/cuda_ed5/computeQ.cu"
{
# 183 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 183 "src/cuda_ed5/computeQ.cu"
}
# 183 "src/cuda_ed5/computeQ.cu"
}
# 184 "src/cuda_ed5/computeQ.cu"
{
# 184 "src/cuda_ed5/computeQ.cu"
if (sY != sY_dup)
# 184 "src/cuda_ed5/computeQ.cu"
{
# 184 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 184 "src/cuda_ed5/computeQ.cu"
}
# 184 "src/cuda_ed5/computeQ.cu"
}
# 185 "src/cuda_ed5/computeQ.cu"
{
# 185 "src/cuda_ed5/computeQ.cu"
if (sZ != sZ_dup)
# 185 "src/cuda_ed5/computeQ.cu"
{
# 185 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 185 "src/cuda_ed5/computeQ.cu"
}
# 185 "src/cuda_ed5/computeQ.cu"
}
# 186 "src/cuda_ed5/computeQ.cu"
expArg1 = ((float)((6.283185307179586232) * ((double)((((((ck[kIndex1]).Kx)) * sX) + ((((ck[kIndex1]).Ky)) * sY)) + ((((ck[kIndex1]).Kz)) * sZ)))));
# 187 "src/cuda_ed5/computeQ.cu"
expArg1_dup = ((float)((6.283185307179586232) * ((double)((((((ck[kIndex1]).Kx)) * sX) + ((((ck[kIndex1]).Ky)) * sY)) + ((((ck[kIndex1]).Kz)) * sZ)))));
# 189 "src/cuda_ed5/computeQ.cu"
{
# 189 "src/cuda_ed5/computeQ.cu"
if (kIndex1 != kIndex1_dup)
# 189 "src/cuda_ed5/computeQ.cu"
{
# 189 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 189 "src/cuda_ed5/computeQ.cu"
}
# 189 "src/cuda_ed5/computeQ.cu"
}
# 190 "src/cuda_ed5/computeQ.cu"
{
# 190 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 190 "src/cuda_ed5/computeQ.cu"
{
# 190 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 190 "src/cuda_ed5/computeQ.cu"
}
# 190 "src/cuda_ed5/computeQ.cu"
}
# 191 "src/cuda_ed5/computeQ.cu"
sQr += ((((ck[kIndex1]).PhiMag)) * (__cuda_cosf(expArg1)));
# 192 "src/cuda_ed5/computeQ.cu"
{
# 192 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 192 "src/cuda_ed5/computeQ.cu"
{
# 192 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 192 "src/cuda_ed5/computeQ.cu"
}
# 192 "src/cuda_ed5/computeQ.cu"
}
# 193 "src/cuda_ed5/computeQ.cu"
sQr_dup += ((((ck[kIndex1]).PhiMag)) * (__cuda_cosf(expArg1)));
# 195 "src/cuda_ed5/computeQ.cu"
{
# 195 "src/cuda_ed5/computeQ.cu"
if (kIndex1 != kIndex1_dup)
# 195 "src/cuda_ed5/computeQ.cu"
{
# 195 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 195 "src/cuda_ed5/computeQ.cu"
}
# 195 "src/cuda_ed5/computeQ.cu"
}
# 196 "src/cuda_ed5/computeQ.cu"
{
# 196 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 196 "src/cuda_ed5/computeQ.cu"
{
# 196 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 196 "src/cuda_ed5/computeQ.cu"
}
# 196 "src/cuda_ed5/computeQ.cu"
}
# 197 "src/cuda_ed5/computeQ.cu"
sQi += ((((ck[kIndex1]).PhiMag)) * (__cuda_sinf(expArg1)));
# 198 "src/cuda_ed5/computeQ.cu"
{
# 198 "src/cuda_ed5/computeQ.cu"
if (expArg != expArg_dup)
# 198 "src/cuda_ed5/computeQ.cu"
{
# 198 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 198 "src/cuda_ed5/computeQ.cu"
}
# 198 "src/cuda_ed5/computeQ.cu"
}
# 199 "src/cuda_ed5/computeQ.cu"
sQi_dup += ((((ck[kIndex1]).PhiMag)) * (__cuda_sinf(expArg1)));
# 200 "src/cuda_ed5/computeQ.cu"
}
# 202 "src/cuda_ed5/computeQ.cu"
if (Qr != Qr_dup)
# 202 "src/cuda_ed5/computeQ.cu"
{
# 202 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 202 "src/cuda_ed5/computeQ.cu"
}
# 203 "src/cuda_ed5/computeQ.cu"
{
# 203 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 203 "src/cuda_ed5/computeQ.cu"
{
# 203 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 203 "src/cuda_ed5/computeQ.cu"
}
# 203 "src/cuda_ed5/computeQ.cu"
}
# 204 "src/cuda_ed5/computeQ.cu"
(Qr[xIndex]) = sQr;
# 205 "src/cuda_ed5/computeQ.cu"
{
# 205 "src/cuda_ed5/computeQ.cu"
if ((Qr[xIndex]) != sQr)
# 205 "src/cuda_ed5/computeQ.cu"
{
# 205 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 205 "src/cuda_ed5/computeQ.cu"
}
# 205 "src/cuda_ed5/computeQ.cu"
}
# 208 "src/cuda_ed5/computeQ.cu"
if (Qi != Qi_dup)
# 208 "src/cuda_ed5/computeQ.cu"
{
# 208 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 208 "src/cuda_ed5/computeQ.cu"
}
# 209 "src/cuda_ed5/computeQ.cu"
{
# 209 "src/cuda_ed5/computeQ.cu"
if (xIndex != xIndex_dup)
# 209 "src/cuda_ed5/computeQ.cu"
{
# 209 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 209 "src/cuda_ed5/computeQ.cu"
}
# 209 "src/cuda_ed5/computeQ.cu"
}
# 210 "src/cuda_ed5/computeQ.cu"
(Qi[xIndex]) = sQi;
# 211 "src/cuda_ed5/computeQ.cu"
{
# 211 "src/cuda_ed5/computeQ.cu"
if ((Qi[xIndex]) != sQi)
# 211 "src/cuda_ed5/computeQ.cu"
{
# 211 "src/cuda_ed5/computeQ.cu"
_Z10GPUFI_EXITi(0);
# 211 "src/cuda_ed5/computeQ.cu"
}
# 211 "src/cuda_ed5/computeQ.cu"
}
# 212 "src/cuda_ed5/computeQ.cu"
} 
# 212 "src/cuda_ed5/computeQ.cu"
}}
#endif
#if defined(__cplusplus)
}
#if !defined(__CUDACC__) &&! defined(__CUDABE__) && !defined(__MULTI_CORE__)
}
#endif
#endif
