	.version 1.0
	.target compute_10, map_f64_to_f32
	//  compiled with /usr/local/cuda/open64/lib//be

	//-----------------------------------------------------------
	// Compiling /tmp/tmpxft_00002098_00000000-1.i (/tmp/ccI#.l8pNmJ)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:compute_10, Endian:little, Pointer Size:64
	//  -O2	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"/tmp/tmpxft_00002098_00000000-5.gpu"
	.file	2	"/usr/lib/gcc/x86_64-linux-gnu/4.1.2/include/stddef.h"
	.file	3	"/usr/local/cuda/bin/../include/crt/device_runtime.h"
	.file	4	"/usr/local/cuda/bin/../include/host_defines.h"
	.file	5	"/usr/local/cuda/bin/../include/crt/storage_class.h"
	.file	6	"/usr/local/cuda/bin/../include/builtin_types.h"
	.file	7	"/usr/local/cuda/bin/../include/device_types.h"
	.file	8	"/usr/local/cuda/bin/../include/driver_types.h"
	.file	9	"/usr/local/cuda/bin/../include/texture_types.h"
	.file	10	"/usr/local/cuda/bin/../include/vector_types.h"
	.file	11	"/usr/local/cuda/bin/../include/device_launch_parameters.h"
	.file	12	"/home/wladimir/dump/test20.cu"
	.file	13	"/usr/local/cuda/bin/../include/common_functions.h"
	.file	14	"/usr/local/cuda/bin/../include/crt/func_macro.h"
	.file	15	"/usr/local/cuda/bin/../include/math_functions.h"
	.file	16	"/usr/local/cuda/bin/../include/device_functions.h"
	.file	17	"/usr/local/cuda/bin/../include/math_constants.h"
	.file	18	"/usr/local/cuda/bin/../include/sm_11_atomic_functions.h"
	.file	19	"/usr/local/cuda/bin/../include/texture_fetch_functions.h"
	.file	20	"/usr/local/cuda/bin/../include/math_functions_dbl_ptx1.h"


	.entry my_kernel
	{
	.reg .u32 $r1,$r2,$r3,$r4;
	.reg .u64 $rd1;
	.param .u64 __cudaparm_x;
//	.param .u64 __cudaparm_y;
//	.loc	12	1	0
$LBB1_my_kernel:
//	.loc	12	3	0
//	trap;
	bar.sync 1;
	bar.sync 2;
	bar.sync 3;
	bar.sync 4;
	bar.sync 5;
	bar.sync 6;
	bar.sync 7;
	bar.sync 8;
	bar.sync 15;
	ld.param.u64 	$rd1, [__cudaparm_x];
//	ld.global.s32   $r1,[$rd1+0x444];
//	ld.global.s32   $r2,[$rd1+0x555];
//	ld.global.s32   $r3,[$rd1+0x666];
//	ld.global.s32   $r4,[$rd1+0x777];

//	st.global.s32 	[$rd1+0], $r1;
//	st.global.s32 	[$rd1+0], $r2;
//	st.global.s32 	[$rd1+0], $r3;
//	st.global.s32 	[$rd1+0], $r4;

ld.global.s32   $r1,[$rd1+0];
st.global.s32   [$rd1+0], $r1;

ld.global.s32   $r1,[$rd1+4];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+8];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+12];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+16];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+20];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+24];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+28];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+32];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+36];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+40];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+44];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+48];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+52];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+56];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+60];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+64];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+68];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+72];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+76];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+80];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+84];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+88];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+92];
st.global.s32   [$rd1+0], $r1;


ld.global.s32   $r1,[$rd1+96];
st.global.s32   [$rd1+0], $r1;



	exit;

	} // my_kernel
